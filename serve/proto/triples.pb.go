// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/triples.proto

/*
Package triples is a generated protocol buffer package.

It is generated from these files:
	proto/triples.proto

It has these top-level messages:
	Claim
	Event
	Change
	Update
*/
package triples

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClaimType int32

const (
	ClaimType_MATCH   ClaimType = 0
	ClaimType_NOMATCH ClaimType = 1
)

var ClaimType_name = map[int32]string{
	0: "MATCH",
	1: "NOMATCH",
}
var ClaimType_value = map[string]int32{
	"MATCH":   0,
	"NOMATCH": 1,
}

func (x ClaimType) String() string {
	return proto.EnumName(ClaimType_name, int32(x))
}
func (ClaimType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Event_Claimed_Result int32

const (
	Event_Claimed_CORRECT Event_Claimed_Result = 0
	Event_Claimed_WRONG   Event_Claimed_Result = 1
	Event_Claimed_LATE    Event_Claimed_Result = 2
)

var Event_Claimed_Result_name = map[int32]string{
	0: "CORRECT",
	1: "WRONG",
	2: "LATE",
}
var Event_Claimed_Result_value = map[string]int32{
	"CORRECT": 0,
	"WRONG":   1,
	"LATE":    2,
}

func (x Event_Claimed_Result) String() string {
	return proto.EnumName(Event_Claimed_Result_name, int32(x))
}
func (Event_Claimed_Result) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1, 0} }

type Claim struct {
	Type  ClaimType `protobuf:"varint,1,opt,name=type,enum=ClaimType" json:"type,omitempty"`
	Cards []uint32  `protobuf:"varint,2,rep,packed,name=cards" json:"cards,omitempty"`
}

func (m *Claim) Reset()                    { *m = Claim{} }
func (m *Claim) String() string            { return proto.CompactTextString(m) }
func (*Claim) ProtoMessage()               {}
func (*Claim) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Claim) GetType() ClaimType {
	if m != nil {
		return m.Type
	}
	return ClaimType_MATCH
}

func (m *Claim) GetCards() []uint32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Event struct {
	// Types that are valid to be assigned to EventOneof:
	//	*Event_Join_
	//	*Event_Claimed_
	EventOneof isEvent_EventOneof `protobuf_oneof:"event_oneof"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isEvent_EventOneof interface {
	isEvent_EventOneof()
}

type Event_Join_ struct {
	Join *Event_Join `protobuf:"bytes,1,opt,name=join,oneof"`
}
type Event_Claimed_ struct {
	Claimed *Event_Claimed `protobuf:"bytes,2,opt,name=claimed,oneof"`
}

func (*Event_Join_) isEvent_EventOneof()    {}
func (*Event_Claimed_) isEvent_EventOneof() {}

func (m *Event) GetEventOneof() isEvent_EventOneof {
	if m != nil {
		return m.EventOneof
	}
	return nil
}

func (m *Event) GetJoin() *Event_Join {
	if x, ok := m.GetEventOneof().(*Event_Join_); ok {
		return x.Join
	}
	return nil
}

func (m *Event) GetClaimed() *Event_Claimed {
	if x, ok := m.GetEventOneof().(*Event_Claimed_); ok {
		return x.Claimed
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_Join_)(nil),
		(*Event_Claimed_)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// event_oneof
	switch x := m.EventOneof.(type) {
	case *Event_Join_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Join); err != nil {
			return err
		}
	case *Event_Claimed_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Claimed); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.EventOneof has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 1: // event_oneof.join
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_Join)
		err := b.DecodeMessage(msg)
		m.EventOneof = &Event_Join_{msg}
		return true, err
	case 2: // event_oneof.claimed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event_Claimed)
		err := b.DecodeMessage(msg)
		m.EventOneof = &Event_Claimed_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// event_oneof
	switch x := m.EventOneof.(type) {
	case *Event_Join_:
		s := proto.Size(x.Join)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Claimed_:
		s := proto.Size(x.Claimed)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Event_Join struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Event_Join) Reset()                    { *m = Event_Join{} }
func (m *Event_Join) String() string            { return proto.CompactTextString(m) }
func (*Event_Join) ProtoMessage()               {}
func (*Event_Join) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Event_Join) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Event_Claimed struct {
	Name   string               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type   ClaimType            `protobuf:"varint,2,opt,name=type,enum=ClaimType" json:"type,omitempty"`
	Result Event_Claimed_Result `protobuf:"varint,3,opt,name=result,enum=Event_Claimed_Result" json:"result,omitempty"`
}

func (m *Event_Claimed) Reset()                    { *m = Event_Claimed{} }
func (m *Event_Claimed) String() string            { return proto.CompactTextString(m) }
func (*Event_Claimed) ProtoMessage()               {}
func (*Event_Claimed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *Event_Claimed) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event_Claimed) GetType() ClaimType {
	if m != nil {
		return m.Type
	}
	return ClaimType_MATCH
}

func (m *Event_Claimed) GetResult() Event_Claimed_Result {
	if m != nil {
		return m.Result
	}
	return Event_Claimed_CORRECT
}

type Change struct {
	// Types that are valid to be assigned to ChangeOneof:
	//	*Change_Deal_
	//	*Change_Match_
	//	*Change_Move_
	ChangeOneof isChange_ChangeOneof `protobuf_oneof:"change_oneof"`
}

func (m *Change) Reset()                    { *m = Change{} }
func (m *Change) String() string            { return proto.CompactTextString(m) }
func (*Change) ProtoMessage()               {}
func (*Change) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isChange_ChangeOneof interface {
	isChange_ChangeOneof()
}

type Change_Deal_ struct {
	Deal *Change_Deal `protobuf:"bytes,1,opt,name=deal,oneof"`
}
type Change_Match_ struct {
	Match *Change_Match `protobuf:"bytes,2,opt,name=match,oneof"`
}
type Change_Move_ struct {
	Move *Change_Move `protobuf:"bytes,3,opt,name=move,oneof"`
}

func (*Change_Deal_) isChange_ChangeOneof()  {}
func (*Change_Match_) isChange_ChangeOneof() {}
func (*Change_Move_) isChange_ChangeOneof()  {}

func (m *Change) GetChangeOneof() isChange_ChangeOneof {
	if m != nil {
		return m.ChangeOneof
	}
	return nil
}

func (m *Change) GetDeal() *Change_Deal {
	if x, ok := m.GetChangeOneof().(*Change_Deal_); ok {
		return x.Deal
	}
	return nil
}

func (m *Change) GetMatch() *Change_Match {
	if x, ok := m.GetChangeOneof().(*Change_Match_); ok {
		return x.Match
	}
	return nil
}

func (m *Change) GetMove() *Change_Move {
	if x, ok := m.GetChangeOneof().(*Change_Move_); ok {
		return x.Move
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Change) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Change_OneofMarshaler, _Change_OneofUnmarshaler, _Change_OneofSizer, []interface{}{
		(*Change_Deal_)(nil),
		(*Change_Match_)(nil),
		(*Change_Move_)(nil),
	}
}

func _Change_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Change)
	// change_oneof
	switch x := m.ChangeOneof.(type) {
	case *Change_Deal_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deal); err != nil {
			return err
		}
	case *Change_Match_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Match); err != nil {
			return err
		}
	case *Change_Move_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Move); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Change.ChangeOneof has unexpected type %T", x)
	}
	return nil
}

func _Change_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Change)
	switch tag {
	case 1: // change_oneof.deal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Change_Deal)
		err := b.DecodeMessage(msg)
		m.ChangeOneof = &Change_Deal_{msg}
		return true, err
	case 2: // change_oneof.match
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Change_Match)
		err := b.DecodeMessage(msg)
		m.ChangeOneof = &Change_Match_{msg}
		return true, err
	case 3: // change_oneof.move
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Change_Move)
		err := b.DecodeMessage(msg)
		m.ChangeOneof = &Change_Move_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Change_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Change)
	// change_oneof
	switch x := m.ChangeOneof.(type) {
	case *Change_Deal_:
		s := proto.Size(x.Deal)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Change_Match_:
		s := proto.Size(x.Match)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Change_Move_:
		s := proto.Size(x.Move)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Change_Position struct {
	X uint32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *Change_Position) Reset()                    { *m = Change_Position{} }
func (m *Change_Position) String() string            { return proto.CompactTextString(m) }
func (*Change_Position) ProtoMessage()               {}
func (*Change_Position) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *Change_Position) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Change_Position) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Change_Deal struct {
	Places []*Change_Deal_Place `protobuf:"bytes,1,rep,name=places" json:"places,omitempty"`
}

func (m *Change_Deal) Reset()                    { *m = Change_Deal{} }
func (m *Change_Deal) String() string            { return proto.CompactTextString(m) }
func (*Change_Deal) ProtoMessage()               {}
func (*Change_Deal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

func (m *Change_Deal) GetPlaces() []*Change_Deal_Place {
	if m != nil {
		return m.Places
	}
	return nil
}

type Change_Deal_Place struct {
	Position *Change_Position `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Card     uint32           `protobuf:"varint,2,opt,name=card" json:"card,omitempty"`
}

func (m *Change_Deal_Place) Reset()                    { *m = Change_Deal_Place{} }
func (m *Change_Deal_Place) String() string            { return proto.CompactTextString(m) }
func (*Change_Deal_Place) ProtoMessage()               {}
func (*Change_Deal_Place) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1, 0} }

func (m *Change_Deal_Place) GetPosition() *Change_Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Change_Deal_Place) GetCard() uint32 {
	if m != nil {
		return m.Card
	}
	return 0
}

type Change_Match struct {
	Positions []*Change_Position `protobuf:"bytes,1,rep,name=positions" json:"positions,omitempty"`
}

func (m *Change_Match) Reset()                    { *m = Change_Match{} }
func (m *Change_Match) String() string            { return proto.CompactTextString(m) }
func (*Change_Match) ProtoMessage()               {}
func (*Change_Match) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 2} }

func (m *Change_Match) GetPositions() []*Change_Position {
	if m != nil {
		return m.Positions
	}
	return nil
}

type Change_Move struct {
	Moves []*Change_Move_MoveOne `protobuf:"bytes,1,rep,name=moves" json:"moves,omitempty"`
}

func (m *Change_Move) Reset()                    { *m = Change_Move{} }
func (m *Change_Move) String() string            { return proto.CompactTextString(m) }
func (*Change_Move) ProtoMessage()               {}
func (*Change_Move) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 3} }

func (m *Change_Move) GetMoves() []*Change_Move_MoveOne {
	if m != nil {
		return m.Moves
	}
	return nil
}

type Change_Move_MoveOne struct {
	From *Change_Position `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To   *Change_Position `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
}

func (m *Change_Move_MoveOne) Reset()                    { *m = Change_Move_MoveOne{} }
func (m *Change_Move_MoveOne) String() string            { return proto.CompactTextString(m) }
func (*Change_Move_MoveOne) ProtoMessage()               {}
func (*Change_Move_MoveOne) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 3, 0} }

func (m *Change_Move_MoveOne) GetFrom() *Change_Position {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Change_Move_MoveOne) GetTo() *Change_Position {
	if m != nil {
		return m.To
	}
	return nil
}

type Update struct {
	// Types that are valid to be assigned to UpdateOneof:
	//	*Update_Change
	//	*Update_Event
	UpdateOneof isUpdate_UpdateOneof `protobuf_oneof:"update_oneof"`
}

func (m *Update) Reset()                    { *m = Update{} }
func (m *Update) String() string            { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()               {}
func (*Update) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isUpdate_UpdateOneof interface {
	isUpdate_UpdateOneof()
}

type Update_Change struct {
	Change *Change `protobuf:"bytes,1,opt,name=change,oneof"`
}
type Update_Event struct {
	Event *Event `protobuf:"bytes,2,opt,name=event,oneof"`
}

func (*Update_Change) isUpdate_UpdateOneof() {}
func (*Update_Event) isUpdate_UpdateOneof()  {}

func (m *Update) GetUpdateOneof() isUpdate_UpdateOneof {
	if m != nil {
		return m.UpdateOneof
	}
	return nil
}

func (m *Update) GetChange() *Change {
	if x, ok := m.GetUpdateOneof().(*Update_Change); ok {
		return x.Change
	}
	return nil
}

func (m *Update) GetEvent() *Event {
	if x, ok := m.GetUpdateOneof().(*Update_Event); ok {
		return x.Event
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Update) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Update_OneofMarshaler, _Update_OneofUnmarshaler, _Update_OneofSizer, []interface{}{
		(*Update_Change)(nil),
		(*Update_Event)(nil),
	}
}

func _Update_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Update)
	// update_oneof
	switch x := m.UpdateOneof.(type) {
	case *Update_Change:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Change); err != nil {
			return err
		}
	case *Update_Event:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Event); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Update.UpdateOneof has unexpected type %T", x)
	}
	return nil
}

func _Update_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Update)
	switch tag {
	case 1: // update_oneof.change
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Change)
		err := b.DecodeMessage(msg)
		m.UpdateOneof = &Update_Change{msg}
		return true, err
	case 2: // update_oneof.event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event)
		err := b.DecodeMessage(msg)
		m.UpdateOneof = &Update_Event{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Update_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Update)
	// update_oneof
	switch x := m.UpdateOneof.(type) {
	case *Update_Change:
		s := proto.Size(x.Change)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Update_Event:
		s := proto.Size(x.Event)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Claim)(nil), "Claim")
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterType((*Event_Join)(nil), "Event.Join")
	proto.RegisterType((*Event_Claimed)(nil), "Event.Claimed")
	proto.RegisterType((*Change)(nil), "Change")
	proto.RegisterType((*Change_Position)(nil), "Change.Position")
	proto.RegisterType((*Change_Deal)(nil), "Change.Deal")
	proto.RegisterType((*Change_Deal_Place)(nil), "Change.Deal.Place")
	proto.RegisterType((*Change_Match)(nil), "Change.Match")
	proto.RegisterType((*Change_Move)(nil), "Change.Move")
	proto.RegisterType((*Change_Move_MoveOne)(nil), "Change.Move.MoveOne")
	proto.RegisterType((*Update)(nil), "Update")
	proto.RegisterEnum("ClaimType", ClaimType_name, ClaimType_value)
	proto.RegisterEnum("Event_Claimed_Result", Event_Claimed_Result_name, Event_Claimed_Result_value)
}

func init() { proto.RegisterFile("proto/triples.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 547 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0x4d, 0x8f, 0xd2, 0x50,
	0x14, 0x6d, 0x4b, 0x5b, 0xe0, 0xf2, 0x11, 0x72, 0x1d, 0x13, 0xd2, 0xc5, 0x84, 0xc1, 0x8f, 0x10,
	0xa2, 0x35, 0xc1, 0x85, 0x2b, 0x17, 0x33, 0x95, 0x88, 0x46, 0x86, 0xf1, 0x05, 0xe3, 0xc2, 0x85,
	0xa9, 0xf0, 0xc6, 0xa9, 0x29, 0x7d, 0x0d, 0x74, 0xc8, 0xb0, 0x70, 0xe9, 0x7f, 0x70, 0xe1, 0x7f,
	0xf4, 0x2f, 0x98, 0x7b, 0xdf, 0x2b, 0x62, 0xc6, 0xd9, 0x90, 0xbe, 0x73, 0xce, 0x3d, 0xf7, 0x13,
	0xb8, 0x97, 0xaf, 0x55, 0xa1, 0x9e, 0x15, 0xeb, 0x24, 0x4f, 0xe5, 0x26, 0xe4, 0x57, 0xff, 0x25,
	0x78, 0x51, 0x1a, 0x27, 0x2b, 0x3c, 0x06, 0xb7, 0xd8, 0xe5, 0xb2, 0x6b, 0xf7, 0xec, 0x41, 0x7b,
	0x04, 0x21, 0xa3, 0xf3, 0x5d, 0x2e, 0x05, 0xe3, 0x78, 0x04, 0xde, 0x22, 0x5e, 0x2f, 0x37, 0x5d,
	0xa7, 0x57, 0x19, 0xb4, 0x84, 0x7e, 0xf4, 0x7f, 0x39, 0xe0, 0x8d, 0xb7, 0x32, 0x2b, 0xf0, 0x04,
	0xdc, 0x6f, 0x2a, 0xc9, 0x38, 0xbe, 0x31, 0x6a, 0x84, 0x8c, 0x86, 0x6f, 0x55, 0x92, 0x4d, 0x2c,
	0xc1, 0x14, 0x0e, 0xa1, 0xba, 0x20, 0x57, 0xb9, 0xec, 0x3a, 0xac, 0x6a, 0x1b, 0x55, 0xa4, 0xd1,
	0x89, 0x25, 0x4a, 0x41, 0x10, 0x80, 0x4b, 0xb1, 0x88, 0xe0, 0x66, 0xf1, 0x4a, 0x97, 0x55, 0x17,
	0xfc, 0x1d, 0xfc, 0xb4, 0xa1, 0x6a, 0x42, 0xfe, 0xc7, 0xef, 0x5b, 0x71, 0xee, 0x68, 0xe5, 0x29,
	0xf8, 0x6b, 0xb9, 0xb9, 0x4e, 0x8b, 0x6e, 0x85, 0x15, 0xf7, 0xff, 0x2d, 0x23, 0x14, 0x4c, 0x0a,
	0x23, 0xea, 0x0f, 0xc1, 0xd7, 0x08, 0x36, 0xa0, 0x1a, 0xcd, 0x84, 0x18, 0x47, 0xf3, 0x8e, 0x85,
	0x75, 0xf0, 0x3e, 0x8a, 0xd9, 0xf9, 0xeb, 0x8e, 0x8d, 0x35, 0x70, 0xdf, 0x9d, 0xce, 0xc7, 0x1d,
	0xe7, 0xac, 0x05, 0x0d, 0x49, 0x5e, 0x9f, 0x55, 0x26, 0xd5, 0x65, 0xff, 0x77, 0x05, 0xfc, 0xe8,
	0x2a, 0xce, 0xbe, 0x4a, 0xec, 0x83, 0xbb, 0x94, 0x71, 0x6a, 0xe6, 0xd3, 0x0c, 0x35, 0x1c, 0xbe,
	0x92, 0x71, 0x4a, 0x03, 0x22, 0x0e, 0x1f, 0x81, 0xb7, 0x8a, 0x8b, 0xc5, 0x95, 0x19, 0x4f, 0xab,
	0x14, 0x4d, 0x09, 0x9c, 0x58, 0x42, 0xb3, 0x64, 0xb5, 0x52, 0x5b, 0xc9, 0xd5, 0x1f, 0x58, 0x4d,
	0xd5, 0x56, 0x92, 0x15, 0x71, 0xc1, 0x63, 0xa8, 0x5d, 0xa8, 0x4d, 0x52, 0x24, 0x2a, 0xc3, 0x26,
	0xd8, 0x37, 0x9c, 0xb7, 0x25, 0xec, 0x1b, 0x7a, 0xed, 0x38, 0x41, 0x4b, 0xd8, 0xbb, 0xe0, 0x3b,
	0xb8, 0x54, 0x02, 0x0e, 0xc1, 0xcf, 0xd3, 0x78, 0x21, 0x37, 0x5d, 0xbb, 0x57, 0x19, 0x34, 0x46,
	0x78, 0x58, 0x60, 0x78, 0x41, 0x94, 0x30, 0x8a, 0xe0, 0x0d, 0x78, 0x0c, 0xe0, 0x13, 0xa8, 0xe5,
	0x26, 0x89, 0xe9, 0xab, 0x53, 0x86, 0x95, 0xc9, 0xc5, 0x5e, 0x41, 0xab, 0xa2, 0xa3, 0x31, 0xb9,
	0xf9, 0x3b, 0x78, 0x01, 0x1e, 0x37, 0x87, 0x21, 0xd4, 0x4b, 0x61, 0x59, 0xc2, 0x6d, 0xaf, 0xbf,
	0x92, 0xe0, 0x87, 0x0d, 0x2e, 0x35, 0x8c, 0x43, 0xf0, 0xa8, 0xe1, 0x32, 0xe8, 0xe8, 0x70, 0x1a,
	0xfc, 0x33, 0xcb, 0xa4, 0xd0, 0x92, 0xe0, 0x3d, 0x54, 0x0d, 0x82, 0x0f, 0xc1, 0xbd, 0x5c, 0xab,
	0xd5, 0x9d, 0x65, 0x33, 0x8b, 0x3d, 0x70, 0x0a, 0x65, 0xb6, 0x71, 0x5b, 0xe3, 0x14, 0xea, 0xac,
	0x0d, 0xcd, 0x05, 0xc3, 0x66, 0xe3, 0x9f, 0xc0, 0xff, 0x90, 0x2f, 0xe3, 0x42, 0xe2, 0x09, 0xf8,
	0x9a, 0x31, 0x39, 0xaa, 0x26, 0x7e, 0x62, 0x09, 0x43, 0xe0, 0x31, 0x78, 0x7c, 0x2d, 0x26, 0x83,
	0xaf, 0xef, 0x90, 0x16, 0xcd, 0x30, 0x99, 0x5f, 0xb3, 0x99, 0x36, 0x1f, 0x3e, 0x80, 0xfa, 0xfe,
	0x96, 0xe9, 0xfe, 0xa6, 0xa7, 0xf3, 0x68, 0xd2, 0xb1, 0xe8, 0x2e, 0xcf, 0x67, 0xfa, 0x61, 0x7f,
	0xf1, 0xf9, 0x8f, 0xfd, 0xfc, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x25, 0x38, 0x5f, 0x61, 0xef,
	0x03, 0x00, 0x00,
}
