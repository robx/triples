// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/triples.proto

/*
Package triples is a generated protocol buffer package.

It is generated from these files:
	proto/triples.proto

It has these top-level messages:
	Claim
	Score
	UpdateEvent
	Position
	PlacedCard
	UpdateChange
	UpdateFull
	Update
*/
package triples

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClaimType int32

const (
	ClaimType_CLAIM_MATCH   ClaimType = 0
	ClaimType_CLAIM_NOMATCH ClaimType = 1
)

var ClaimType_name = map[int32]string{
	0: "CLAIM_MATCH",
	1: "CLAIM_NOMATCH",
}
var ClaimType_value = map[string]int32{
	"CLAIM_MATCH":   0,
	"CLAIM_NOMATCH": 1,
}

func (x ClaimType) String() string {
	return proto.EnumName(ClaimType_name, int32(x))
}
func (ClaimType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UpdateEvent_EventClaimed_Result int32

const (
	UpdateEvent_EventClaimed_CORRECT UpdateEvent_EventClaimed_Result = 0
	UpdateEvent_EventClaimed_WRONG   UpdateEvent_EventClaimed_Result = 1
	UpdateEvent_EventClaimed_LATE    UpdateEvent_EventClaimed_Result = 2
)

var UpdateEvent_EventClaimed_Result_name = map[int32]string{
	0: "CORRECT",
	1: "WRONG",
	2: "LATE",
}
var UpdateEvent_EventClaimed_Result_value = map[string]int32{
	"CORRECT": 0,
	"WRONG":   1,
	"LATE":    2,
}

func (x UpdateEvent_EventClaimed_Result) String() string {
	return proto.EnumName(UpdateEvent_EventClaimed_Result_name, int32(x))
}
func (UpdateEvent_EventClaimed_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 2, 0}
}

type Claim struct {
	Type  ClaimType `protobuf:"varint,1,opt,name=type,enum=ClaimType" json:"type,omitempty"`
	Cards []uint32  `protobuf:"varint,2,rep,packed,name=cards" json:"cards,omitempty"`
}

func (m *Claim) Reset()                    { *m = Claim{} }
func (m *Claim) String() string            { return proto.CompactTextString(m) }
func (*Claim) ProtoMessage()               {}
func (*Claim) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Claim) GetType() ClaimType {
	if m != nil {
		return m.Type
	}
	return ClaimType_CLAIM_MATCH
}

func (m *Claim) GetCards() []uint32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Score struct {
	Match        uint32 `protobuf:"varint,1,opt,name=match" json:"match,omitempty"`
	Matchwrong   uint32 `protobuf:"varint,2,opt,name=matchwrong" json:"matchwrong,omitempty"`
	Nomatch      uint32 `protobuf:"varint,3,opt,name=nomatch" json:"nomatch,omitempty"`
	Nomatchwrong uint32 `protobuf:"varint,4,opt,name=nomatchwrong" json:"nomatchwrong,omitempty"`
}

func (m *Score) Reset()                    { *m = Score{} }
func (m *Score) String() string            { return proto.CompactTextString(m) }
func (*Score) ProtoMessage()               {}
func (*Score) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Score) GetMatch() uint32 {
	if m != nil {
		return m.Match
	}
	return 0
}

func (m *Score) GetMatchwrong() uint32 {
	if m != nil {
		return m.Matchwrong
	}
	return 0
}

func (m *Score) GetNomatch() uint32 {
	if m != nil {
		return m.Nomatch
	}
	return 0
}

func (m *Score) GetNomatchwrong() uint32 {
	if m != nil {
		return m.Nomatchwrong
	}
	return 0
}

type UpdateEvent struct {
	// Types that are valid to be assigned to EventOneof:
	//	*UpdateEvent_Join
	//	*UpdateEvent_Leave
	//	*UpdateEvent_Claimed
	EventOneof isUpdateEvent_EventOneof `protobuf_oneof:"event_oneof"`
}

func (m *UpdateEvent) Reset()                    { *m = UpdateEvent{} }
func (m *UpdateEvent) String() string            { return proto.CompactTextString(m) }
func (*UpdateEvent) ProtoMessage()               {}
func (*UpdateEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isUpdateEvent_EventOneof interface {
	isUpdateEvent_EventOneof()
}

type UpdateEvent_Join struct {
	Join *UpdateEvent_EventJoin `protobuf:"bytes,1,opt,name=join,oneof"`
}
type UpdateEvent_Leave struct {
	Leave *UpdateEvent_EventLeave `protobuf:"bytes,2,opt,name=leave,oneof"`
}
type UpdateEvent_Claimed struct {
	Claimed *UpdateEvent_EventClaimed `protobuf:"bytes,3,opt,name=claimed,oneof"`
}

func (*UpdateEvent_Join) isUpdateEvent_EventOneof()    {}
func (*UpdateEvent_Leave) isUpdateEvent_EventOneof()   {}
func (*UpdateEvent_Claimed) isUpdateEvent_EventOneof() {}

func (m *UpdateEvent) GetEventOneof() isUpdateEvent_EventOneof {
	if m != nil {
		return m.EventOneof
	}
	return nil
}

func (m *UpdateEvent) GetJoin() *UpdateEvent_EventJoin {
	if x, ok := m.GetEventOneof().(*UpdateEvent_Join); ok {
		return x.Join
	}
	return nil
}

func (m *UpdateEvent) GetLeave() *UpdateEvent_EventLeave {
	if x, ok := m.GetEventOneof().(*UpdateEvent_Leave); ok {
		return x.Leave
	}
	return nil
}

func (m *UpdateEvent) GetClaimed() *UpdateEvent_EventClaimed {
	if x, ok := m.GetEventOneof().(*UpdateEvent_Claimed); ok {
		return x.Claimed
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateEvent_OneofMarshaler, _UpdateEvent_OneofUnmarshaler, _UpdateEvent_OneofSizer, []interface{}{
		(*UpdateEvent_Join)(nil),
		(*UpdateEvent_Leave)(nil),
		(*UpdateEvent_Claimed)(nil),
	}
}

func _UpdateEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateEvent)
	// event_oneof
	switch x := m.EventOneof.(type) {
	case *UpdateEvent_Join:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Join); err != nil {
			return err
		}
	case *UpdateEvent_Leave:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Leave); err != nil {
			return err
		}
	case *UpdateEvent_Claimed:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Claimed); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpdateEvent.EventOneof has unexpected type %T", x)
	}
	return nil
}

func _UpdateEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateEvent)
	switch tag {
	case 1: // event_oneof.join
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateEvent_EventJoin)
		err := b.DecodeMessage(msg)
		m.EventOneof = &UpdateEvent_Join{msg}
		return true, err
	case 2: // event_oneof.leave
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateEvent_EventLeave)
		err := b.DecodeMessage(msg)
		m.EventOneof = &UpdateEvent_Leave{msg}
		return true, err
	case 3: // event_oneof.claimed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateEvent_EventClaimed)
		err := b.DecodeMessage(msg)
		m.EventOneof = &UpdateEvent_Claimed{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateEvent)
	// event_oneof
	switch x := m.EventOneof.(type) {
	case *UpdateEvent_Join:
		s := proto.Size(x.Join)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateEvent_Leave:
		s := proto.Size(x.Leave)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateEvent_Claimed:
		s := proto.Size(x.Claimed)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UpdateEvent_EventJoin struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *UpdateEvent_EventJoin) Reset()                    { *m = UpdateEvent_EventJoin{} }
func (m *UpdateEvent_EventJoin) String() string            { return proto.CompactTextString(m) }
func (*UpdateEvent_EventJoin) ProtoMessage()               {}
func (*UpdateEvent_EventJoin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *UpdateEvent_EventJoin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateEvent_EventLeave struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *UpdateEvent_EventLeave) Reset()                    { *m = UpdateEvent_EventLeave{} }
func (m *UpdateEvent_EventLeave) String() string            { return proto.CompactTextString(m) }
func (*UpdateEvent_EventLeave) ProtoMessage()               {}
func (*UpdateEvent_EventLeave) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

func (m *UpdateEvent_EventLeave) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateEvent_EventClaimed struct {
	Name   string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type   ClaimType                       `protobuf:"varint,2,opt,name=type,enum=ClaimType" json:"type,omitempty"`
	Result UpdateEvent_EventClaimed_Result `protobuf:"varint,3,opt,name=result,enum=UpdateEvent_EventClaimed_Result" json:"result,omitempty"`
	Score  *Score                          `protobuf:"bytes,4,opt,name=score" json:"score,omitempty"`
}

func (m *UpdateEvent_EventClaimed) Reset()                    { *m = UpdateEvent_EventClaimed{} }
func (m *UpdateEvent_EventClaimed) String() string            { return proto.CompactTextString(m) }
func (*UpdateEvent_EventClaimed) ProtoMessage()               {}
func (*UpdateEvent_EventClaimed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 2} }

func (m *UpdateEvent_EventClaimed) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateEvent_EventClaimed) GetType() ClaimType {
	if m != nil {
		return m.Type
	}
	return ClaimType_CLAIM_MATCH
}

func (m *UpdateEvent_EventClaimed) GetResult() UpdateEvent_EventClaimed_Result {
	if m != nil {
		return m.Result
	}
	return UpdateEvent_EventClaimed_CORRECT
}

func (m *UpdateEvent_EventClaimed) GetScore() *Score {
	if m != nil {
		return m.Score
	}
	return nil
}

type Position struct {
	X uint32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *Position) Reset()                    { *m = Position{} }
func (m *Position) String() string            { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()               {}
func (*Position) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Position) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Position) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type PlacedCard struct {
	Position *Position `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Card     uint32    `protobuf:"varint,2,opt,name=card" json:"card,omitempty"`
}

func (m *PlacedCard) Reset()                    { *m = PlacedCard{} }
func (m *PlacedCard) String() string            { return proto.CompactTextString(m) }
func (*PlacedCard) ProtoMessage()               {}
func (*PlacedCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PlacedCard) GetPosition() *Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *PlacedCard) GetCard() uint32 {
	if m != nil {
		return m.Card
	}
	return 0
}

type UpdateChange struct {
	// Types that are valid to be assigned to ChangeOneof:
	//	*UpdateChange_Deal
	//	*UpdateChange_Match
	//	*UpdateChange_Move
	ChangeOneof isUpdateChange_ChangeOneof `protobuf_oneof:"change_oneof"`
}

func (m *UpdateChange) Reset()                    { *m = UpdateChange{} }
func (m *UpdateChange) String() string            { return proto.CompactTextString(m) }
func (*UpdateChange) ProtoMessage()               {}
func (*UpdateChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type isUpdateChange_ChangeOneof interface {
	isUpdateChange_ChangeOneof()
}

type UpdateChange_Deal struct {
	Deal *UpdateChange_ChangeDeal `protobuf:"bytes,1,opt,name=deal,oneof"`
}
type UpdateChange_Match struct {
	Match *UpdateChange_ChangeMatch `protobuf:"bytes,2,opt,name=match,oneof"`
}
type UpdateChange_Move struct {
	Move *UpdateChange_ChangeMove `protobuf:"bytes,3,opt,name=move,oneof"`
}

func (*UpdateChange_Deal) isUpdateChange_ChangeOneof()  {}
func (*UpdateChange_Match) isUpdateChange_ChangeOneof() {}
func (*UpdateChange_Move) isUpdateChange_ChangeOneof()  {}

func (m *UpdateChange) GetChangeOneof() isUpdateChange_ChangeOneof {
	if m != nil {
		return m.ChangeOneof
	}
	return nil
}

func (m *UpdateChange) GetDeal() *UpdateChange_ChangeDeal {
	if x, ok := m.GetChangeOneof().(*UpdateChange_Deal); ok {
		return x.Deal
	}
	return nil
}

func (m *UpdateChange) GetMatch() *UpdateChange_ChangeMatch {
	if x, ok := m.GetChangeOneof().(*UpdateChange_Match); ok {
		return x.Match
	}
	return nil
}

func (m *UpdateChange) GetMove() *UpdateChange_ChangeMove {
	if x, ok := m.GetChangeOneof().(*UpdateChange_Move); ok {
		return x.Move
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateChange) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateChange_OneofMarshaler, _UpdateChange_OneofUnmarshaler, _UpdateChange_OneofSizer, []interface{}{
		(*UpdateChange_Deal)(nil),
		(*UpdateChange_Match)(nil),
		(*UpdateChange_Move)(nil),
	}
}

func _UpdateChange_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateChange)
	// change_oneof
	switch x := m.ChangeOneof.(type) {
	case *UpdateChange_Deal:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deal); err != nil {
			return err
		}
	case *UpdateChange_Match:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Match); err != nil {
			return err
		}
	case *UpdateChange_Move:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Move); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpdateChange.ChangeOneof has unexpected type %T", x)
	}
	return nil
}

func _UpdateChange_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateChange)
	switch tag {
	case 1: // change_oneof.deal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateChange_ChangeDeal)
		err := b.DecodeMessage(msg)
		m.ChangeOneof = &UpdateChange_Deal{msg}
		return true, err
	case 2: // change_oneof.match
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateChange_ChangeMatch)
		err := b.DecodeMessage(msg)
		m.ChangeOneof = &UpdateChange_Match{msg}
		return true, err
	case 3: // change_oneof.move
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateChange_ChangeMove)
		err := b.DecodeMessage(msg)
		m.ChangeOneof = &UpdateChange_Move{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateChange_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateChange)
	// change_oneof
	switch x := m.ChangeOneof.(type) {
	case *UpdateChange_Deal:
		s := proto.Size(x.Deal)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateChange_Match:
		s := proto.Size(x.Match)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateChange_Move:
		s := proto.Size(x.Move)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UpdateChange_ChangeDeal struct {
	Cards []*PlacedCard `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
}

func (m *UpdateChange_ChangeDeal) Reset()                    { *m = UpdateChange_ChangeDeal{} }
func (m *UpdateChange_ChangeDeal) String() string            { return proto.CompactTextString(m) }
func (*UpdateChange_ChangeDeal) ProtoMessage()               {}
func (*UpdateChange_ChangeDeal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

func (m *UpdateChange_ChangeDeal) GetCards() []*PlacedCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

type UpdateChange_ChangeMatch struct {
	Positions []*Position `protobuf:"bytes,1,rep,name=positions" json:"positions,omitempty"`
}

func (m *UpdateChange_ChangeMatch) Reset()                    { *m = UpdateChange_ChangeMatch{} }
func (m *UpdateChange_ChangeMatch) String() string            { return proto.CompactTextString(m) }
func (*UpdateChange_ChangeMatch) ProtoMessage()               {}
func (*UpdateChange_ChangeMatch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 1} }

func (m *UpdateChange_ChangeMatch) GetPositions() []*Position {
	if m != nil {
		return m.Positions
	}
	return nil
}

type UpdateChange_ChangeMove struct {
	Moves []*UpdateChange_ChangeMove_MoveOne `protobuf:"bytes,1,rep,name=moves" json:"moves,omitempty"`
}

func (m *UpdateChange_ChangeMove) Reset()                    { *m = UpdateChange_ChangeMove{} }
func (m *UpdateChange_ChangeMove) String() string            { return proto.CompactTextString(m) }
func (*UpdateChange_ChangeMove) ProtoMessage()               {}
func (*UpdateChange_ChangeMove) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 2} }

func (m *UpdateChange_ChangeMove) GetMoves() []*UpdateChange_ChangeMove_MoveOne {
	if m != nil {
		return m.Moves
	}
	return nil
}

type UpdateChange_ChangeMove_MoveOne struct {
	From *Position `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To   *Position `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
}

func (m *UpdateChange_ChangeMove_MoveOne) Reset()         { *m = UpdateChange_ChangeMove_MoveOne{} }
func (m *UpdateChange_ChangeMove_MoveOne) String() string { return proto.CompactTextString(m) }
func (*UpdateChange_ChangeMove_MoveOne) ProtoMessage()    {}
func (*UpdateChange_ChangeMove_MoveOne) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 2, 0}
}

func (m *UpdateChange_ChangeMove_MoveOne) GetFrom() *Position {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *UpdateChange_ChangeMove_MoveOne) GetTo() *Position {
	if m != nil {
		return m.To
	}
	return nil
}

type UpdateFull struct {
	Cards    []*PlacedCard             `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
	DeckSize uint32                    `protobuf:"varint,2,opt,name=deckSize" json:"deckSize,omitempty"`
	Scores   []*UpdateFull_PlayerScore `protobuf:"bytes,3,rep,name=scores" json:"scores,omitempty"`
}

func (m *UpdateFull) Reset()                    { *m = UpdateFull{} }
func (m *UpdateFull) String() string            { return proto.CompactTextString(m) }
func (*UpdateFull) ProtoMessage()               {}
func (*UpdateFull) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateFull) GetCards() []*PlacedCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *UpdateFull) GetDeckSize() uint32 {
	if m != nil {
		return m.DeckSize
	}
	return 0
}

func (m *UpdateFull) GetScores() []*UpdateFull_PlayerScore {
	if m != nil {
		return m.Scores
	}
	return nil
}

type UpdateFull_PlayerScore struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Score *Score `protobuf:"bytes,2,opt,name=score" json:"score,omitempty"`
}

func (m *UpdateFull_PlayerScore) Reset()                    { *m = UpdateFull_PlayerScore{} }
func (m *UpdateFull_PlayerScore) String() string            { return proto.CompactTextString(m) }
func (*UpdateFull_PlayerScore) ProtoMessage()               {}
func (*UpdateFull_PlayerScore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *UpdateFull_PlayerScore) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateFull_PlayerScore) GetScore() *Score {
	if m != nil {
		return m.Score
	}
	return nil
}

type Update struct {
	// Types that are valid to be assigned to UpdateOneof:
	//	*Update_Change
	//	*Update_Event
	//	*Update_Full
	UpdateOneof isUpdate_UpdateOneof `protobuf_oneof:"update_oneof"`
}

func (m *Update) Reset()                    { *m = Update{} }
func (m *Update) String() string            { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()               {}
func (*Update) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type isUpdate_UpdateOneof interface {
	isUpdate_UpdateOneof()
}

type Update_Change struct {
	Change *UpdateChange `protobuf:"bytes,2,opt,name=change,oneof"`
}
type Update_Event struct {
	Event *UpdateEvent `protobuf:"bytes,3,opt,name=event,oneof"`
}
type Update_Full struct {
	Full *UpdateFull `protobuf:"bytes,4,opt,name=full,oneof"`
}

func (*Update_Change) isUpdate_UpdateOneof() {}
func (*Update_Event) isUpdate_UpdateOneof()  {}
func (*Update_Full) isUpdate_UpdateOneof()   {}

func (m *Update) GetUpdateOneof() isUpdate_UpdateOneof {
	if m != nil {
		return m.UpdateOneof
	}
	return nil
}

func (m *Update) GetChange() *UpdateChange {
	if x, ok := m.GetUpdateOneof().(*Update_Change); ok {
		return x.Change
	}
	return nil
}

func (m *Update) GetEvent() *UpdateEvent {
	if x, ok := m.GetUpdateOneof().(*Update_Event); ok {
		return x.Event
	}
	return nil
}

func (m *Update) GetFull() *UpdateFull {
	if x, ok := m.GetUpdateOneof().(*Update_Full); ok {
		return x.Full
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Update) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Update_OneofMarshaler, _Update_OneofUnmarshaler, _Update_OneofSizer, []interface{}{
		(*Update_Change)(nil),
		(*Update_Event)(nil),
		(*Update_Full)(nil),
	}
}

func _Update_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Update)
	// update_oneof
	switch x := m.UpdateOneof.(type) {
	case *Update_Change:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Change); err != nil {
			return err
		}
	case *Update_Event:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Event); err != nil {
			return err
		}
	case *Update_Full:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Full); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Update.UpdateOneof has unexpected type %T", x)
	}
	return nil
}

func _Update_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Update)
	switch tag {
	case 2: // update_oneof.change
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateChange)
		err := b.DecodeMessage(msg)
		m.UpdateOneof = &Update_Change{msg}
		return true, err
	case 3: // update_oneof.event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateEvent)
		err := b.DecodeMessage(msg)
		m.UpdateOneof = &Update_Event{msg}
		return true, err
	case 4: // update_oneof.full
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateFull)
		err := b.DecodeMessage(msg)
		m.UpdateOneof = &Update_Full{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Update_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Update)
	// update_oneof
	switch x := m.UpdateOneof.(type) {
	case *Update_Change:
		s := proto.Size(x.Change)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Update_Event:
		s := proto.Size(x.Event)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Update_Full:
		s := proto.Size(x.Full)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Claim)(nil), "Claim")
	proto.RegisterType((*Score)(nil), "Score")
	proto.RegisterType((*UpdateEvent)(nil), "UpdateEvent")
	proto.RegisterType((*UpdateEvent_EventJoin)(nil), "UpdateEvent.EventJoin")
	proto.RegisterType((*UpdateEvent_EventLeave)(nil), "UpdateEvent.EventLeave")
	proto.RegisterType((*UpdateEvent_EventClaimed)(nil), "UpdateEvent.EventClaimed")
	proto.RegisterType((*Position)(nil), "Position")
	proto.RegisterType((*PlacedCard)(nil), "PlacedCard")
	proto.RegisterType((*UpdateChange)(nil), "UpdateChange")
	proto.RegisterType((*UpdateChange_ChangeDeal)(nil), "UpdateChange.ChangeDeal")
	proto.RegisterType((*UpdateChange_ChangeMatch)(nil), "UpdateChange.ChangeMatch")
	proto.RegisterType((*UpdateChange_ChangeMove)(nil), "UpdateChange.ChangeMove")
	proto.RegisterType((*UpdateChange_ChangeMove_MoveOne)(nil), "UpdateChange.ChangeMove.MoveOne")
	proto.RegisterType((*UpdateFull)(nil), "UpdateFull")
	proto.RegisterType((*UpdateFull_PlayerScore)(nil), "UpdateFull.PlayerScore")
	proto.RegisterType((*Update)(nil), "Update")
	proto.RegisterEnum("ClaimType", ClaimType_name, ClaimType_value)
	proto.RegisterEnum("UpdateEvent_EventClaimed_Result", UpdateEvent_EventClaimed_Result_name, UpdateEvent_EventClaimed_Result_value)
}

func init() { proto.RegisterFile("proto/triples.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 742 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x15, 0x29, 0x52, 0x97, 0xa1, 0xe4, 0xaa, 0xd3, 0xa2, 0x95, 0x89, 0xd6, 0x95, 0x89, 0xb6,
	0x36, 0x8c, 0x82, 0x42, 0x55, 0xd4, 0xe8, 0x4b, 0x51, 0xd8, 0xac, 0x6b, 0x35, 0xb0, 0x2c, 0x63,
	0xad, 0x20, 0x8f, 0x06, 0x23, 0xad, 0x6d, 0x25, 0x14, 0x57, 0xa0, 0x28, 0xc7, 0x4a, 0xbe, 0x20,
	0xf9, 0x90, 0xfc, 0x45, 0xf2, 0x98, 0xef, 0x0a, 0x76, 0x76, 0x29, 0x51, 0xb0, 0x0c, 0xe4, 0x85,
	0xde, 0x9d, 0x73, 0x66, 0xcf, 0xee, 0xcc, 0x19, 0x0b, 0xbe, 0x99, 0x26, 0x22, 0x15, 0xed, 0x34,
	0x19, 0x4f, 0x23, 0x3e, 0xf3, 0x69, 0xe7, 0xfd, 0x0d, 0x76, 0x10, 0x85, 0xe3, 0x09, 0xee, 0x80,
	0x95, 0x2e, 0xa6, 0xbc, 0x69, 0xb4, 0x8c, 0xfd, 0xad, 0x0e, 0xf8, 0x14, 0x1d, 0x2c, 0xa6, 0x9c,
	0x51, 0x1c, 0xbf, 0x05, 0x7b, 0x18, 0x26, 0xa3, 0x59, 0xd3, 0x6c, 0x15, 0xf7, 0xeb, 0x4c, 0x6d,
	0xbc, 0x37, 0x60, 0x5f, 0x0e, 0x45, 0x42, 0xf0, 0x24, 0x4c, 0x87, 0xb7, 0x94, 0x5f, 0x67, 0x6a,
	0x83, 0x3b, 0x00, 0xb4, 0x78, 0x95, 0x88, 0xf8, 0xa6, 0x69, 0x12, 0x94, 0x8b, 0x60, 0x13, 0xca,
	0xb1, 0x50, 0x79, 0x45, 0x02, 0xb3, 0x2d, 0x7a, 0x50, 0xd3, 0x4b, 0x95, 0x6b, 0x11, 0xbc, 0x16,
	0xf3, 0x3e, 0x16, 0xc1, 0x79, 0x3a, 0x1d, 0x85, 0x29, 0x3f, 0xb9, 0xe3, 0x71, 0x8a, 0xbf, 0x81,
	0xf5, 0x42, 0x8c, 0x63, 0xba, 0x82, 0xd3, 0xf9, 0xce, 0xcf, 0x61, 0x3e, 0x7d, 0x9f, 0x88, 0x71,
	0xdc, 0x2d, 0x30, 0x62, 0x61, 0x1b, 0xec, 0x88, 0x87, 0x77, 0x9c, 0xae, 0xe5, 0x74, 0xbe, 0x7f,
	0x48, 0x3f, 0x93, 0x70, 0xb7, 0xc0, 0x14, 0x0f, 0xff, 0x84, 0xf2, 0x50, 0x16, 0x85, 0x8f, 0xe8,
	0xb2, 0x4e, 0x67, 0xfb, 0x61, 0x4a, 0xa0, 0x08, 0xdd, 0x02, 0xcb, 0xb8, 0xee, 0x4f, 0x50, 0x5d,
	0x8a, 0x23, 0x82, 0x15, 0x87, 0x13, 0x55, 0xe5, 0x2a, 0xa3, 0xb5, 0xdb, 0x02, 0x58, 0xc9, 0x6d,
	0x64, 0x7c, 0x32, 0xa0, 0x96, 0x3f, 0x7e, 0x13, 0x69, 0xd9, 0x40, 0xf3, 0x91, 0x06, 0xfe, 0x05,
	0xa5, 0x84, 0xcf, 0xe6, 0x51, 0x4a, 0xb7, 0xdf, 0xea, 0xb4, 0x1e, 0xbd, 0xbd, 0xcf, 0x88, 0xc7,
	0x34, 0x1f, 0x7f, 0x00, 0x7b, 0x26, 0x9b, 0x4c, 0x4d, 0x70, 0x3a, 0x25, 0x9f, 0x5a, 0xce, 0x54,
	0xd0, 0x3b, 0x80, 0x92, 0xe2, 0xa3, 0x03, 0xe5, 0xa0, 0xcf, 0xd8, 0x49, 0x30, 0x68, 0x14, 0xb0,
	0x0a, 0xf6, 0x33, 0xd6, 0x3f, 0x3f, 0x6d, 0x18, 0x58, 0x01, 0xeb, 0xec, 0x68, 0x70, 0xd2, 0x30,
	0x8f, 0xeb, 0xe0, 0x70, 0x29, 0x74, 0x25, 0x62, 0x2e, 0xae, 0xbd, 0x5f, 0xa1, 0x72, 0x21, 0x66,
	0xe3, 0x74, 0x2c, 0x62, 0xac, 0x81, 0x71, 0xaf, 0xcd, 0x63, 0xdc, 0xcb, 0xdd, 0x42, 0xfb, 0xc5,
	0x58, 0x78, 0xa7, 0x00, 0x17, 0x51, 0x38, 0xe4, 0xa3, 0x20, 0x4c, 0x46, 0xf8, 0x0b, 0x54, 0xa6,
	0x3a, 0x4b, 0xb7, 0xba, 0xea, 0x67, 0xc7, 0xb0, 0x25, 0x24, 0x6b, 0x24, 0x3d, 0xaa, 0x4f, 0xa1,
	0xb5, 0xf7, 0xbe, 0x08, 0x35, 0xf5, 0xea, 0xe0, 0x36, 0x8c, 0x6f, 0x38, 0xfa, 0x60, 0x8d, 0x78,
	0x18, 0xe9, 0x73, 0x9a, 0x7e, 0x1e, 0xf4, 0xd5, 0x9f, 0x7f, 0x79, 0x18, 0x49, 0xd3, 0x48, 0x1e,
	0xfe, 0x9e, 0xd9, 0xdc, 0x5c, 0x73, 0xc0, 0x5a, 0x42, 0x4f, 0x12, 0xa4, 0x6d, 0x94, 0x93, 0x7d,
	0xb0, 0x26, 0xe2, 0x8e, 0x6b, 0xcf, 0x6c, 0x94, 0xe8, 0x09, 0xf2, 0x19, 0xf1, 0xdc, 0x36, 0xc0,
	0x4a, 0x18, 0x77, 0xb3, 0xb1, 0x33, 0x5a, 0xc5, 0x7d, 0xa7, 0xe3, 0xf8, 0xab, 0x42, 0xe8, 0x19,
	0x74, 0x0f, 0xc1, 0xc9, 0x09, 0xe3, 0x1e, 0x54, 0xb3, 0x1a, 0x64, 0x59, 0xb9, 0xfa, 0xac, 0x30,
	0xf7, 0xad, 0x91, 0x29, 0x49, 0x7d, 0x3c, 0x04, 0x5b, 0xea, 0x67, 0x39, 0xad, 0xc7, 0x2e, 0xea,
	0xcb, 0x4f, 0x3f, 0xe6, 0x4c, 0xd1, 0xdd, 0x00, 0xca, 0x3a, 0x82, 0x3f, 0x82, 0x75, 0x9d, 0x88,
	0xc9, 0xc3, 0xae, 0x50, 0x18, 0xb7, 0xc1, 0x4c, 0x85, 0xae, 0x5c, 0x0e, 0x34, 0x53, 0x71, 0xbc,
	0x05, 0xb5, 0x21, 0x29, 0x68, 0x67, 0x7c, 0x30, 0x00, 0x94, 0xfe, 0x7f, 0xf3, 0xe8, 0x4b, 0xaa,
	0x80, 0x2e, 0x54, 0x46, 0x7c, 0xf8, 0xf2, 0x72, 0xfc, 0x9a, 0xeb, 0x96, 0x2f, 0xf7, 0xd8, 0x86,
	0x12, 0x79, 0x75, 0xd6, 0x2c, 0x52, 0x7e, 0x36, 0xeb, 0xf2, 0x6c, 0x79, 0xd4, 0x82, 0x27, 0xca,
	0xd2, 0x9a, 0xe6, 0xfe, 0x03, 0x4e, 0x2e, 0xbc, 0x71, 0xdc, 0x96, 0x43, 0x61, 0x6e, 0x1a, 0x8a,
	0x77, 0x06, 0x94, 0x94, 0x06, 0xee, 0x41, 0x49, 0x3d, 0x4d, 0x33, 0xeb, 0x6b, 0x85, 0xed, 0x16,
	0x98, 0x86, 0xf1, 0x67, 0xb0, 0x69, 0x38, 0xb4, 0x53, 0x6a, 0xf9, 0xf9, 0x94, 0x76, 0x22, 0x10,
	0x77, 0xc1, 0xba, 0x9e, 0x47, 0x91, 0x9e, 0x45, 0x27, 0xf7, 0x12, 0xe9, 0x20, 0x09, 0xc9, 0x62,
	0xce, 0x29, 0xaa, 0x8a, 0x79, 0xd0, 0x86, 0xea, 0xf2, 0x9f, 0x01, 0x7e, 0x05, 0x4e, 0x70, 0x76,
	0xf4, 0x7f, 0xef, 0xaa, 0x77, 0x34, 0x08, 0xba, 0x8d, 0x02, 0x7e, 0x0d, 0x75, 0x15, 0x38, 0xef,
	0xab, 0x90, 0xf1, 0xbc, 0x44, 0xbf, 0x0d, 0x7f, 0x7c, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x56, 0xf0,
	0x9e, 0xdc, 0x32, 0x06, 0x00, 0x00,
}
